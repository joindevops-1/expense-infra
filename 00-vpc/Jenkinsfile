pipeline {
    agent{
        label 'AGENT-1'
    }
    options{
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Choose the Terraform action')
    }
    // environment {
        
    // }

    stages {
        

        stage('Terraform Init and Plan') {
            steps {
                withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                    script {
                        sh """
                            cd 00-vpc
                            terraform init -reconfigure
                            terraform plan -out=tfplan
                        """ 
                    }
                }
            }
        }

        stage('Apply or Destroy') {
            steps {
                withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                    script {
                        // Apply or destroy based on user choice
                        dir('00-vpc') {
                            if (params.ACTION == 'apply') {
                                sh 'terraform apply -auto-approve tfplan'
                            } else if (params.ACTION == 'destroy') {
                                sh 'terraform destroy -auto-approve tfplan'
                            }
                        }
                    }
                }
            }
        }

        
    }

    post {
        always {
            deleteDir()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}
